/*
Type
m - to set margin
p - to set padding

Direction
t - to set top
r - to set right
b - to set bottom
l - to set left
x - to set x-axis
y - to set y-axis
a - to set all

Size
0 - removes margin or padding for specified direction
1 - applies margin or padding with 16px * .25
2 - applies margin or padding with 16px * .50
3 - applies margin or padding with 16px
4 - applies margin or padding with 16px * 1.5
5 - applies margin or padding with 16px * 3
*/
// Spacing
// ============================================================
$spacer := .8rem
$spacer-x := $spacer
$spacer-y := $spacer
$spacers := {
  zero: {
    x: 0,
    y: 0
  },
  one: {
    x: ($spacer-x * .25),   //4px
    y: ($spacer-y * .25)
  },
  two: {
    x: ($spacer-x * .5),    //8px
    y: ($spacer-y * .5)
  },
  three: {
    x: $spacer-x,           //16px
    y: $spacer-y
  },
  four: {
    x: ($spacer-x * 1.5),   //24px
    y: ($spacer-y * 1.5)
  },
  five: {
    x: ($spacer-x * 3),     //72px
    y: ($spacer-y * 3)
  }
}

$i = 0
for level, spacer in $spacers
  .mt-{$i}
    margin-top: spacer.y !important
  .mr-{$i}
    margin-right: spacer.x !important
  .mb-{$i}
    margin-bottom: spacer.y !important
  .ml-{$i}
    margin-left: spacer.x !important
  .mx-{$i}
    margin-left: spacer.x !important
    margin-right: spacer.x !important
  .my-{$i}
    margin-top: spacer.y !important
    margin-bottom: spacer.y !important
  .ma-{$i}
    margin: spacer.y spacer.x !important

  .pt-{$i}
    padding-top: spacer.y !important
  .pr-{$i}
    padding-right: spacer.x !important
  .pb-{$i}
    padding-bottom: spacer.y !important
  .pl-{$i}
    padding-left: spacer.x !important
  .px-{$i}
    padding-left: spacer.x !important
    padding-right: spacer.x !important
  .py-{$i}
    padding-top: spacer.y !important
    padding-bottom: spacer.y !important
  .pa-{$i}
    padding: spacer.y spacer.x !important

  $i = $i + 1